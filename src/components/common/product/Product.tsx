"use client";

import { ProductInterface } from "@/shared/interfaces/productsInterface";
import Image from "next/image";
import React, { useState } from "react";
import Paragraph from "../text/paragraph/Paragraph";
import { motion } from "framer-motion";
import Link from "next/link";
import { getMainImage } from "@/shared/helper/getMainImage";
import Button from "../button/Button";
import { useAppDispatch } from "@/redux/hooks";
import {
  addProductWithAmount,
  changeCartModalVisible,
} from "@/redux/slices/cart/cartSlice";
import { useSession } from "next-auth/react";
import FavoriteButton from "@/components/common/product/FavoriteButton";

interface ProductInterfaceComponent extends ProductInterface {
  className?: string;
  imageWidth?: string;
}

const Product: React.FC<ProductInterfaceComponent> = ({
  id,
  name,
  price,
  images,
  quantity,
  weight,
  className = "",
  imageWidth = "200px",
}) => {
  const dispatch = useAppDispatch();
  const [checkCartVisible, setCheckCartVisible] = useState(false);

  const { data: session } = useSession();

  return (
    <Link href={"/shop/product/" + id} prefetch>
      <div
        className={`cursor-pointer bg-neutral-800 p-[10px] rounded-xl max-w-[220px] max-h-[391px] ${className}`}
      >
        <div
          className={`overflow-hidden aspect-square rounded-xl w-[${imageWidth}]`}
          style={{ width: imageWidth }}
        >
          <div className="relative aspect-square bg-neutral-700 rounded-xl">
            <Image
              alt={name}
              src={getMainImage(images)}
              fill={true}
              style={{ objectFit: "contain" }}
              placeholder="blur"
              blurDataURL="/assets/img/no-image.svg"
              sizes="100%"
            />
            {checkCartVisible && (
              <div className="absolute -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2">
                <motion.div
                // initial={{ scale: 0, opacity: 0 }}
                // animate={{ scale: 1, opacity: 1 }}
                // exit={{ scale: 0, opacity: 0 }}
                >
                  <Button
                    onClick={() => {
                      dispatch(changeCartModalVisible(true));
                    }}
                    size="M"
                    type="primary"
                    className="px-6 py-3 rounded-lg "
                  >
                    <span className="flex items-center gap-1 truncate">
                      {" "}
                      <CartIcon color={"#ffffff"} /> Pogledaj korpu
                    </span>
                  </Button>
                </motion.div>
              </div>
            )}

            {session?.user && session && <FavoriteButton productId={id} />}
          </div>
        </div>
        <div className="max-w-full mt-4 overflow-hidden overflow-ellipsis">
          <Paragraph
            size="L"
            weight="Semibold"
            className="overflow-hidden h-14 max-h-14 overflow-ellipsis"
            style={
              {
                // display: "-webkit-box",
                // WebkitLineClamp: 2,
                // WebkitBoxOrient: "vertical",
                // overflow: "hidden",
                // textOverflow: "ellipsis",
              }
            }
          >
            {name.slice(0, 45)}
            {name.length > 45 ? "..." : ""}
          </Paragraph>
          <div className="flex items-center gap-2 mt-2">
            <Image
              alt={name}
              src={
                quantity > 0
                  ? "/assets/img/stock/green.svg"
                  : "/assets/img/stock/red.svg"
              }
              width={15}
              height={15}
            />
            <Paragraph size="XS" weight="Regular">
              {quantity > 0 ? "Na stanju" : "Nema na stanju"}
            </Paragraph>
          </div>
          <div className="flex items-center gap-2 mt-2">
            {/* {salePrice && (
              <Paragraph
                size="S"
                weight="Bold"
                className="text-[rgba(248,250,252,0.5)] line-through"
              >
                {price.toFixed(2)} KM
              </Paragraph>
            )} */}
            <Paragraph size="L" weight="Bold">
              {`${parseFloat(price).toFixed(2)} KM`}
            </Paragraph>
          </div>
          <Button
            type="primary"
            size="L"
            text=""
            disabled={quantity < 1}
            onClick={() => {
              dispatch(
                addProductWithAmount({
                  amount: 1,
                  productId: id,
                  productData: {
                    image: getMainImage(images),
                    weight,
                    price,
                    quantity,
                    name,
                  },
                  shouldNotify: true,
                })
              );
              setCheckCartVisible(true);
            }}
            className="h-8 w-[200px] mt-2 max-w-full "
          >
            <div className="flex gap-2 ">
              <div className="items-center hidden xsm:flex">
                <CartIcon color={quantity < 1 ? "#7a7a7a" : "#ffffff"} />
              </div>
              Dodaj u korpu
            </div>
          </Button>
        </div>
      </div>
    </Link>
  );
};

export const CartIcon: React.FC<{ color: string }> = ({ color }) => {
  return (
    <svg
      width="14"
      height="14"
      viewBox="0 0 14 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <mask id="path-1-inside-1_891_1145" fill={color}>
        <path d="M13.4513 2.59837C13.2951 2.41084 13.0994 2.26001 12.8783 2.1566C12.6572 2.0532 12.416 1.99974 12.1719 2.00004H3.18967L3.16634 1.80504C3.11859 1.39972 2.92378 1.026 2.61884 0.754751C2.31389 0.483498 1.92002 0.333564 1.5119 0.333374L1.38856 0.333374C1.24122 0.333374 1.09991 0.391906 0.995726 0.496092C0.891539 0.600279 0.833008 0.741587 0.833008 0.88893C0.833008 1.03627 0.891539 1.17758 0.995726 1.28177C1.09991 1.38595 1.24122 1.44449 1.38856 1.44449H1.5119C1.64797 1.4445 1.77931 1.49446 1.88099 1.58488C1.98268 1.6753 2.04764 1.7999 2.06356 1.93504L2.82801 8.43504C2.90737 9.11103 3.23216 9.73436 3.74073 10.1867C4.24931 10.6391 4.90626 10.8889 5.5869 10.8889H11.3886C11.5359 10.8889 11.6772 10.8304 11.7814 10.7262C11.8856 10.622 11.9441 10.4807 11.9441 10.3334C11.9441 10.186 11.8856 10.0447 11.7814 9.94054C11.6772 9.83635 11.5359 9.77782 11.3886 9.77782H5.5869C5.24304 9.77685 4.9079 9.66955 4.62742 9.47063C4.34694 9.27171 4.13485 8.9909 4.02023 8.66671H10.6425C11.2937 8.66675 11.9243 8.43795 12.424 8.02028C12.9237 7.60262 13.2608 7.02265 13.3763 6.38171L13.8125 3.96282C13.856 3.72282 13.8462 3.47619 13.7838 3.24039C13.7214 3.0046 13.6079 2.78542 13.4513 2.59837ZM12.7219 3.7656L12.2852 6.18448C12.2159 6.56949 12.0133 6.91781 11.7129 7.16848C11.4126 7.41915 11.0337 7.55619 10.6425 7.5556H3.84356L3.32079 3.11115H12.1719C12.2535 3.11066 12.3342 3.12816 12.4083 3.1624C12.4824 3.19665 12.548 3.24679 12.6005 3.30927C12.653 3.37175 12.6911 3.44502 12.7121 3.52389C12.7331 3.60276 12.7364 3.68529 12.7219 3.7656Z" />
      </mask>
      <path
        d="M13.4513 2.59837C13.2951 2.41084 13.0994 2.26001 12.8783 2.1566C12.6572 2.0532 12.416 1.99974 12.1719 2.00004H3.18967L3.16634 1.80504C3.11859 1.39972 2.92378 1.026 2.61884 0.754751C2.31389 0.483498 1.92002 0.333564 1.5119 0.333374L1.38856 0.333374C1.24122 0.333374 1.09991 0.391906 0.995726 0.496092C0.891539 0.600279 0.833008 0.741587 0.833008 0.88893C0.833008 1.03627 0.891539 1.17758 0.995726 1.28177C1.09991 1.38595 1.24122 1.44449 1.38856 1.44449H1.5119C1.64797 1.4445 1.77931 1.49446 1.88099 1.58488C1.98268 1.6753 2.04764 1.7999 2.06356 1.93504L2.82801 8.43504C2.90737 9.11103 3.23216 9.73436 3.74073 10.1867C4.24931 10.6391 4.90626 10.8889 5.5869 10.8889H11.3886C11.5359 10.8889 11.6772 10.8304 11.7814 10.7262C11.8856 10.622 11.9441 10.4807 11.9441 10.3334C11.9441 10.186 11.8856 10.0447 11.7814 9.94054C11.6772 9.83635 11.5359 9.77782 11.3886 9.77782H5.5869C5.24304 9.77685 4.9079 9.66955 4.62742 9.47063C4.34694 9.27171 4.13485 8.9909 4.02023 8.66671H10.6425C11.2937 8.66675 11.9243 8.43795 12.424 8.02028C12.9237 7.60262 13.2608 7.02265 13.3763 6.38171L13.8125 3.96282C13.856 3.72282 13.8462 3.47619 13.7838 3.24039C13.7214 3.0046 13.6079 2.78542 13.4513 2.59837ZM12.7219 3.7656L12.2852 6.18448C12.2159 6.56949 12.0133 6.91781 11.7129 7.16848C11.4126 7.41915 11.0337 7.55619 10.6425 7.5556H3.84356L3.32079 3.11115H12.1719C12.2535 3.11066 12.3342 3.12816 12.4083 3.1624C12.4824 3.19665 12.548 3.24679 12.6005 3.30927C12.653 3.37175 12.6911 3.44502 12.7121 3.52389C12.7331 3.60276 12.7364 3.68529 12.7219 3.7656Z"
        fill={color}
      />
      <path
        d="M13.4513 2.59837L-2.93782 16.2551L-2.92293 16.273L-2.90799 16.2908L13.4513 2.59837ZM12.1719 2.00004V23.3334H12.1849L12.1979 23.3334L12.1719 2.00004ZM3.18967 2.00004L-17.9926 4.53468L-15.7431 23.3334H3.18967V2.00004ZM3.16634 1.80504L-18.0205 4.30104L-18.0182 4.32036L-18.0159 4.33968L3.16634 1.80504ZM1.5119 0.333374L1.52182 -21H1.5119V0.333374ZM1.38856 0.333374V21.6667V0.333374ZM0.833008 0.88893H-20.5003H0.833008ZM1.38856 1.44449V22.7778V1.44449ZM1.5119 1.44449L1.51471 -19.8888H1.5119V1.44449ZM2.06356 1.93504L23.2509 -0.556732L23.2504 -0.560959L2.06356 1.93504ZM2.82801 8.43504L24.0158 5.94757L24.0153 5.94327L2.82801 8.43504ZM5.5869 10.8889V-10.4444H5.58645L5.5869 10.8889ZM5.5869 9.77782L5.52694 31.1111L5.55692 31.1112H5.5869V9.77782ZM4.02023 8.66671V-12.6666H-26.1495L-16.0931 15.7777L4.02023 8.66671ZM10.6425 8.66671L10.6438 -12.6666H10.6425V8.66671ZM13.3763 6.38171L-7.61849 2.59646L-7.61862 2.59717L13.3763 6.38171ZM13.8125 3.96282L-7.17837 0.155383L-7.18038 0.166474L-7.18238 0.177568L13.8125 3.96282ZM12.7219 3.7656L-8.27069 -0.0321181L-8.2721 -0.0243129L12.7219 3.7656ZM12.2852 6.18448L-8.70876 2.39458L-8.70999 2.4014L12.2852 6.18448ZM10.6425 7.5556L10.6748 -13.7777L10.6586 -13.7777H10.6425V7.5556ZM3.84356 7.5556L-17.3437 10.0477L-15.1275 28.8889H3.84356V7.5556ZM3.32079 3.11115V-18.2222H-20.669L-17.8665 5.6033L3.32079 3.11115ZM12.1719 3.11115V24.4445H12.2356L12.2993 24.4441L12.1719 3.11115ZM29.8405 -11.0584C27.6793 -13.6519 24.9736 -15.7379 21.9155 -17.168L3.84114 21.4812C1.22524 20.2579 -1.0892 18.4736 -2.93782 16.2551L29.8405 -11.0584ZM21.9155 -17.168C18.8574 -18.5981 15.5219 -19.3374 12.1459 -19.3333L12.1979 23.3334C9.31015 23.3369 6.45701 22.7045 3.84114 21.4812L21.9155 -17.168ZM12.1719 -19.3333H3.18967V23.3334H12.1719V-19.3333ZM24.3719 -0.534602L24.3486 -0.729602L-18.0159 4.33968L-17.9926 4.53468L24.3719 -0.534602ZM24.3532 -0.690957C23.6942 -6.28442 21.0058 -11.4417 16.7976 -15.185L-11.5599 16.6945C-15.1582 13.4937 -17.457 9.08385 -18.0205 4.30104L24.3532 -0.690957ZM16.7976 -15.185C12.5894 -18.9282 7.15397 -20.9973 1.52182 -21L1.50197 21.6667C-3.31392 21.6645 -7.9616 19.8952 -11.5599 16.6945L16.7976 -15.185ZM1.5119 -21H1.38856V21.6667H1.5119V-21ZM1.38856 -21C-4.41673 -21 -9.98426 -18.6938 -14.0892 -14.5889L16.0807 15.581C12.1841 19.4776 6.89917 21.6667 1.38856 21.6667V-21ZM-14.0892 -14.5889C-18.1942 -10.4839 -20.5003 -4.91637 -20.5003 0.88893H22.1663C22.1663 6.39954 19.9773 11.6844 16.0807 15.581L-14.0892 -14.5889ZM-20.5003 0.88893C-20.5003 6.69422 -18.1942 12.2617 -14.0892 16.3667L16.0807 -13.8032C19.9773 -9.90659 22.1663 -4.62168 22.1663 0.88893H-20.5003ZM-14.0892 16.3667C-9.98425 20.4717 -4.41673 22.7778 1.38856 22.7778V-19.8888C6.89917 -19.8888 12.1841 -17.6998 16.0807 -13.8032L-14.0892 16.3667ZM1.38856 22.7778H1.5119V-19.8888H1.38856V22.7778ZM1.50908 22.7778C-3.58009 22.7771 -8.49204 20.9087 -12.2951 17.527L16.0571 -14.3572C12.0506 -17.9198 6.87603 -19.8881 1.51471 -19.8888L1.50908 22.7778ZM-12.2951 17.527C-16.0982 14.1452 -18.5278 9.48526 -19.1233 4.43104L23.2504 -0.560959C22.6231 -5.88545 20.0635 -10.7946 16.0571 -14.3572L-12.2951 17.527ZM-19.1237 4.42681L-18.3593 10.9268L24.0153 5.94327L23.2509 -0.556732L-19.1237 4.42681ZM-18.3598 10.9225C-17.6709 16.7901 -14.8518 22.2006 -10.4373 26.127L17.9188 -5.75359C21.3161 -2.7319 23.4857 1.43194 24.0158 5.94757L-18.3598 10.9225ZM-10.4373 26.127C-6.02292 30.0534 -0.320565 32.2224 5.58735 32.2223L5.58645 -10.4444C10.1331 -10.4445 14.5215 -8.77529 17.9188 -5.75359L-10.4373 26.127ZM5.5869 32.2223H11.3886V-10.4444H5.5869V32.2223ZM11.3886 32.2223C17.1938 32.2223 22.7613 29.9162 26.8663 25.8112L-3.30354 -4.35873C0.593087 -8.25536 5.87801 -10.4444 11.3886 -10.4444V32.2223ZM26.8663 25.8112C30.9714 21.7062 33.2775 16.1386 33.2775 10.3334H-9.38921C-9.38921 4.82282 -7.20017 -0.462102 -3.30354 -4.35873L26.8663 25.8112ZM33.2775 10.3334C33.2775 4.52814 30.9714 -1.0394 26.8663 -5.14441L-3.30354 25.0255C-7.20017 21.1289 -9.38921 15.8439 -9.38921 10.3334H33.2775ZM26.8663 -5.14441C22.7613 -9.24941 17.1938 -11.5555 11.3886 -11.5555V31.1112C5.87801 31.1112 0.593087 28.9221 -3.30354 25.0255L26.8663 -5.14441ZM11.3886 -11.5555H5.5869V31.1112H11.3886V-11.5555ZM5.64685 -11.5554C9.70438 -11.544 13.6591 -10.2779 16.9687 -7.93061L-7.71389 26.8719C-3.84326 29.617 0.7817 31.0977 5.52694 31.1111L5.64685 -11.5554ZM16.9687 -7.93061C20.2784 -5.58333 22.781 -2.26981 24.1335 1.55568L-16.0931 15.7777C-14.5113 20.2516 -11.5845 24.1267 -7.71389 26.8719L16.9687 -7.93061ZM4.02023 30H10.6425V-12.6666H4.02023V30ZM10.6411 30C16.2942 30.0004 21.7676 28.0144 26.1052 24.3891L-1.25712 -8.34852C2.08097 -11.1385 6.29325 -12.6669 10.6438 -12.6666L10.6411 30ZM26.1052 24.3891C30.4427 20.7638 33.3685 15.7296 34.3713 10.1662L-7.61862 2.59717C-6.84684 -1.68431 -4.59522 -5.55851 -1.25712 -8.34852L26.1052 24.3891ZM34.3712 10.167L34.8073 7.74807L-7.18238 0.177568L-7.61849 2.59646L34.3712 10.167ZM34.8033 7.77025C35.4051 4.4521 35.2699 1.04223 34.4071 -2.21772L-6.83949 8.69851C-7.57746 5.91015 -7.69317 2.99355 -7.17837 0.155383L34.8033 7.77025ZM34.4071 -2.21772C33.5443 -5.47773 31.9751 -8.50809 29.8107 -11.0941L-2.90799 16.2908C-4.75931 14.0789 -6.10152 11.4869 -6.83949 8.69851L34.4071 -2.21772ZM-8.2721 -0.0243129L-8.70876 2.39458L33.2792 9.97439L33.7159 7.55551L-8.2721 -0.0243129ZM-8.70999 2.4014C-7.8914 -2.14159 -5.50084 -6.25188 -1.95686 -9.20979L25.3827 23.5468C29.5274 20.0875 32.3231 15.2806 33.2805 9.96757L-8.70999 2.4014ZM-1.95686 -9.20979C1.58711 -12.1677 6.05863 -13.7847 10.6748 -13.7777L10.6101 28.8889C16.0087 28.8971 21.2381 27.006 25.3827 23.5468L-1.95686 -9.20979ZM10.6425 -13.7777H3.84356V28.8889H10.6425V-13.7777ZM25.0308 5.06344L24.5081 0.619L-17.8665 5.6033L-17.3437 10.0477L25.0308 5.06344ZM3.32079 24.4445H12.1719V-18.2222H3.32079V24.4445ZM12.2993 24.4441C9.24712 24.4623 6.22834 23.8079 3.45766 22.5272L21.359 -16.2024C18.4401 -17.5516 15.2599 -18.241 12.0445 -18.2218L12.2993 24.4441ZM3.45766 22.5272C0.686958 21.2466 -1.7675 19.3712 -3.73124 17.0346L28.9323 -10.4161C26.8635 -12.8777 24.2778 -14.8533 21.359 -16.2024L3.45766 22.5272ZM-3.73124 17.0346C-5.69504 14.6979 -7.11985 11.9572 -7.90442 9.00753L33.3286 -1.95974C32.5021 -5.06717 31.0011 -7.95439 28.9323 -10.4161L-3.73124 17.0346ZM-7.90442 9.00753C-8.689 6.05778 -8.81404 2.97141 -8.27069 -0.0321178L33.7145 7.56331C34.2869 4.39917 34.1552 1.14775 33.3286 -1.95974L-7.90442 9.00753Z"
        fill={color}
        mask="url(#path-1-inside-1_891_1145)"
      />
      <path
        d="M4.72146 13.6667C5.33511 13.6667 5.83257 13.1692 5.83257 12.5556C5.83257 11.9419 5.33511 11.4445 4.72146 11.4445C4.10781 11.4445 3.61035 11.9419 3.61035 12.5556C3.61035 13.1692 4.10781 13.6667 4.72146 13.6667Z"
        fill={color}
      />
      <path
        d="M10.2771 13.6667C10.8908 13.6667 11.3882 13.1692 11.3882 12.5556C11.3882 11.9419 10.8908 11.4445 10.2771 11.4445C9.66348 11.4445 9.16602 11.9419 9.16602 12.5556C9.16602 13.1692 9.66348 13.6667 10.2771 13.6667Z"
        fill={color}
      />
    </svg>
  );
};

export default Product;
